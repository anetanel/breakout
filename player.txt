For C programmers:

#define FRAMES (1)
#define HEIGHT (8)
#define GAP    (0)
const unsigned char P0COLOURS[FRAMES] =
{
  0x14
};
const unsigned char P1COLOURS[FRAMES] =
{
  0x18
};
const unsigned char P0DATA[FRAMES][HEIGHT] =
{
  {
    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00
  }
};
const unsigned char P1DATA[FRAMES][HEIGHT] =
{
  {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  }
};

For BASIC programmers:

10000 REM **** FRAMES ****
10010 DATA 1
10020 REM **** HEIGHT ****
10030 DATA 8
10040 REM **** GAP ****
10050 DATA 0
10060 REM **** P0 COLOURS ****
10070 DATA 20
10080 REM **** P1 COLOURS ****
10090 DATA 24
10100 REM **** P0 DATA ****
10110 REM **** FRAME 1
10120 DATA 255,255,255,255,0,0,0,0
10130 REM **** P1 DATA ****
10140 REM **** FRAME 1
10150 DATA 0,0,0,0,0,0,0,0

For BASIC programmers (2):

10000 REM **** FRAMES ****
10010 DATA 1
10020 REM **** HEIGHT ****
10030 DATA 8
10040 REM **** GAP ****
10050 DATA 0
10060 REM **** FRAME 1 COLOURS (P0, P1) ****
10070 DATA 20,24
10080 REM **** FRAME 1 ****
10090 REM **** P0 DATA
10100 DATA 255,255,255,255,0,0,0,0
10110 REM **** P1 DATA
10120 DATA 0,0,0,0,0,0,0,0

For Assembler programmers:

FRAMES:
 .BYTE 1
HEIGHT:
 .BYTE 8
GAP:
 .BYTE 0
P0COLOURS:
 .BYTE $14
P1COLOURS:
 .BYTE $18
P0DATA:
; FRAME 1
 .BYTE $ff,$ff,$ff,$ff,$00,$00,$00,$00
P1DATA:
; FRAME 1
 .BYTE $00,$00,$00,$00,$00,$00,$00,$00

For FASTBASIC programmers:

' frames = 1
' height = 8
' gap    = 0

data Colour0() byte = 20

data Colour1() byte = 24

data Player0() byte = 255,255,255,255,0,0,0,0

data Player1() byte = 0,0,0,0,0,0,0,0

